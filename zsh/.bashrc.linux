export PS1="[\u@\h \w]\$ "
#PS1='\[\033[1;31;40m\]\u@\h:\w\$ '
#PS1='[\[\e[32;40m\]\u@\h \w \t]$ '
#export PS1="[\e[32;1m\u@\h \W]\\$"
#PS1="[\e[32;1m\u@\h \W]\\$"
#export CLICOLOR=1
#export LSCOLORS=gxfxcxdxbxegedabagacad
export TERM=xterm-256color

#alias l='ls -l'
#alias la='ls -l -a'
#alias lt='ls -l -t -r -a -h'
#alias ldir='ls -dltrh */'
#alias lt='ls -l -t -r -a -h'
#alias ldir='ls -dltrh */'
alias l='ls -l -t -r -a -h -F'
alias le='exa -bghHliSa -s modified'
alias lsd='lsd -l --header -a'
alias lf="ls -l -F"

alias c='clear'
alias s='source ~/.zshrc'
alias h='history'

#alias bat='sudo bat'
#alias m='less'
#alias m='sudo bat'
alias moar='moar -style monokai -wrap'
alias m='moar'
#alias n='sudo nano -m -$'
alias n='sudo micro'

#alias grep='grep -i -E --color=always -n --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
#alias mdless='pandoc -s -f markdown -t man \!* | groff -T utf8 -man | less'
alias k='kill -9'
#alias k='kill -TERM'
#alias tea='2 >&1 |tee -a'
#alias tenull='& > /dev/null |tee -a'
umask 022
#alias chus='chmod u+s'
#alias chux='chmod u+x'
#alias chall='chmod -R 777'

#alias pg="pmset -g"
#alias rf='sudo rm -rf'
alias cp='cp -r'
#alias pgr='ps -ef|grep -v grep|grep --color=always'

alias p='ps -ef|grep -v grep|grep'
# show all threads
alias pt='ps -Lf'
alias pt2='print_all_thr(){ps mp "$1" -o THREAD,tid};print_all_thr'
#show all child process
alias pp='pgrep -P'
alias pp2='ps --ppid'
alias ptree='pstree -p|grep'

#alias tail='tail -f'
alias t='tail -n 200'

# CPU top 10 process in linux
alias pg10="ps auxw|head -1;ps auxw|sort -rn -k3|head -10"

# Top 10 consumed memory linux
alias pm10="ps auxw|head -1;ps auxw|sort -rn -k4|head -10"

alias mem="free -h"
#alias memp='mep(){grep Pss /proc/"$1"/smaps| awk "{total+=$2}; END {print total}"};mep'

alias ng="sudo netstat -antp|grep 'listen'"
#alias ng="sudo netstat -antp|grep 'listen'|paste -d \" \" - <(sudo netstat -antp|grep 'listen'|awk '{print $7}'|cut -d'/' -f1|xargs -I {} ps --no-headers -p {} -o cmd)"
#alias ngk="netstat -an|grep $1|awk '{print $2}'|sudo xargs kill -9"
alias lg="lsof -i|grep"
#alias lgd='lsof +D'


#alias e='emacs -nw'
alias emacs='emacs -nw'
alias edn="emacs --daemon"
alias edk="emacsclient -e '(kill-emacs)'"
alias edr="emacsclient -e '(kill-emacs)' && emacs --daemon"
alias e='emacsclient -t'

#alias soo="sudo !!"
alias cline="find . -name '*.c' | xargs wc -l | awk '{a+=$1}END{print a}'"
alias cline2="find . -name '*.c'|xargs wc -l|awk '{a+=$1}END{print a}'"

alias ff="find . -iname"
alias fff='ag_fzf_file(){ag -z -a -i "$1" |fzf > /tmp/fzf.log};ag_fzf_file'
alias fff2='ag_fzf_file(){ag -z -a -i -C2 "$1" |fzf > /tmp/fzf.log};ag_fzf_file'
alias fffw='ag_fzf_file(){ag -z -a -i -w "$1" |fzf > /tmp/fzf.log};ag_fzf_file'

#alias fng="find . -name '*'|xargs grep"
alias ff2='find_in_file(){find . -iname "$1"|xargs grep -i -n -E --color=always --exclude-dir={.bzr,CVS,.git,.hg,.svn} "$2"};find_in_file'

#alias kora="ps -ef|grep ora_|awk '{print $2}'|xargs kill -9"

alias fdisk="sudo fdisk -l"
#alias dl="df -lha"
alias dff='df -lhTa'
alias duu="sudo du -sh"
#alias dum="du -ah --max-depth=1"
alias dul='sudo du -ah --max-depth=1 |sort -rn'

alias gcg="gtags --gtagslabel ctags"
alias txstart="tmux attach || tmux_init"
alias wh="which"
alias watch='watch -n 2 -d'
alias xzz='xz -z -v --threads=0 -9 -e'

alias pstree='pstree -apnuh'

# add rsync command
#rsync -avzr --progress --delete cyc@10.207.140.18:/home/cyc/cyc_core ./cyc_core
#rsync -avzr --progress cyc@10.207.140.18:/home/cyc/cyc_core ./cyc_core

alias curl='curl -O'

#cl() { cd "$@" && pwd ; ls -ltrahF; }
#cl() { cd "$@" && ls -l -t -r -a -h -F; }
#alias ..="cl .."

#alias llock="light-locker --lock-on-suspend&"
#alias vncone="vncserver -alwaysshared :1 -geometry 1440Ã—900"

tmux_init()
{
    tmux new-session -s "qbai" -d -n "qbai"    # open new session
   #  tmux new-window -n "qbai"          # open new window
   # tmux split-window -h                # slit window vertical
  #  tmux split-window -v "top"          # split window horizonal
    tmux -2 attach-session -d           # tmux -2 using 256color
}

# decide if any tmux already was opened
#   if which tmux 2>&1 >/dev/null; then
#    test -z "$TMUX" && (tmux attach || tmux_init)
#   fi


#export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
export LESS='-i -M -R -j20 -J'
#linenum and no wrap -i -M -N -R -S +F
#linenum with wrap -i -M -N -R -+S +F
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;38;2;187;194;207;48;2;56;122;167m'
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline


# privoxy at home
alias spr="/usr/local/sbin/privoxy --no-daemon /usr/local/etc/privoxy/config &"
alias npr="netstat -an|grep 8118"
alias ppr="ps -ef|grep privoxy"

if [ -x /usr/bin/dircolors ]; then
    #alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'
    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
    alias tree='tree -C'

    # disable green background for o+w dir
    dircolors -p > ~/.dircolors
    eval "$(dircolors ~/.dircolors)"
    LS_COLORS+=':ow=01;35'
fi


###################### trash ######################

if [ ! -d "~/.trash" ]; then
    mkdir -p ~/.trash
fi

alias r='trash'
#alias rl='trashlist'
#alias ur='undelfile'
alias ctra='cleartrash'


# Replace rm with mv, and move files into .trash folder
trash()
{
    mv $@  ~/.trash/
}
# Show all trashlist files
trashlist()
{
    echo -e "Garbage Lists in ~/.trash/ "
    echo -e "----Usage------"
    echo -e " Use 'cleartrash' to clear all garbages in ~/.trash!!"
    echo -e "Use 'ur' to mv the file in garbages to current dir!!"
    ls -al  ~/.trash
}
# Move back all files in trashlist
undelfile()
{
    mv -i ~/.trash/$@ ./
}
# Clear all trash files
cleartrash()
{
    echo -ne "Clear all garbages in ~/.trash, Sure?[y/n]"
    read confirm
    if [ $confirm == 'y' -o $confirm == 'Y' ] ;then
        /bin/rm -rf ~/.trash/*
        /bin/rm -rf ~/.trash/.* 2>/dev/null
    fi
}

###################### trash ######################
#export EDITOR='sudo less -i -M -R -j20 -J' # for ranger preview
#export EDITOR='sudo nano -m -$'
#export VISUAL='sudo nano -m -$'
export EDITOR='sudo micro'
export VISUAL='sudo micro'

# if VISUAL does not work, uninstall or rename vi then link nano as vi 

export GTAGSLABEL=pygments

export PATH=/usr/local/sbin:/usr/local/bin:.:/usr/bin:/bin:/usr/sbin:~/.cargo/bin:~/.local/bin:$PATH
#export LD_LIBRARY_PATH=/Users/qbai/Project/opensource/db-6.1.19/opt/bdb/lib:$LD_LIBRARY_PATH


########### oh-my-linux ######################
if grep -Ei "Arch Linux" /etc/issue > /dev/null || grep -Ei "Arch Linux" /etc/*-release > /dev/null; then
	alias reboot='sudo systemctl reboot'
	alias poweroff='sudo systemctl poweroff'
	alias suspend='sudo systemctl suspend'
	alias hibernate='sudo systemctl hibernate'

	alias packey='sudo pacman -Sy archlinux-keyring --noconfirm'
	alias pacin='sudo pacman -Sy --noconfirm --needed'
	alias pacre='sudo pacman -Rs --noconfirm'
	alias pacupg='sudo pacman -Syu --noconfirm'
	alias pacclean='yes|sudo pacman -Scc'
	# paccache -rk1 or paccache -r
	alias pacqo='sudo pacman -Qo'			#one file belongs to which package
	alias pacsi='sudo pacman -Si'			# show remote or local package info
	alias pacfl='sudo pacman -Fl'			# show package file list
	#alias pacf='sudo pacman -F'			  show file in which pkg remotely
	alias pacqu='sudo pacman -Qu'			# show all pkg needed to be upgrade


	# alias aremove2='sudo pacman -Rdd --noconfirm'
	# pacman -Qs    query installed package
	# pacman -Qu    query available upgrade package' 

	alias yayin='yay -S --noconfirm --needed'
	alias yayre='yay -R --noconfirm'
	alias yayupg='yay -Sua'
	alias yayqo='yay -Qo'
	alias yaysi='yay -Si'
	alias yayfl='yay -Fl'
	alias yayqu='yay -Qu'
	
	#alias grub-update='sudo grub-mkconfig -o /boot/grub/grub.cfg'

	# connect home's stereo manually
	#alias mystereo = "bluetoothctl connect 04\:FE\:A1\:C7\:3C\:67"

	##export {http, ftp, https, rsync}_proxy='http://127.0.0.1:8118'
	##export {HTTP, FTP, HTTPS, RSYNC}_PROXY=$http_proxy
	#export http_proxy="http://127.0.0.1:8118"
	#export https_proxy=$http_proxy
	#export all_proxy="socks5://127.0.0.1:7591"
	#export ftp_proxy=$http_proxy
	#export rsync_proxy=$http_proxy
	#export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

	# if imwheel was installed
	if [ -x "$(command -v imwheel)" ]; then
		imwheel >/dev/null 2>&1
	fi	
	
	# start up ss manually
	alias start-ss='sudo systemctl start shadowsocks-libev@jp.service'
	#alias start-ss='(ss-local -c /etc/shadowsocks/jp.json > /dev/null 2>&1)&'

	#alias start-wifi='sudo netctl start wlan0-NewLan'
fi
	## xmodmap -pke  => print current keymapping table
	# exchange tilde and grave for my filco keyboard
	#xmodmap -e "keycode 49 = asciitilde grave"

############# git #######################
# git config --global icdiff.options '--highlight --line-numbers'
#alias gdd='git icdiff | less -i -M -R -j20 -J'
#alias gshow='git showtool'
#alias gcmm='git commit -m'
#alias gde='git difftool --tool=ediffclient --no-prompt'
#alias gde='git difftool --tool=ediff --diff-filter=M --no-promt'
#alias gme='git mergetool --tool=ediffclient --no-prompt'
alias gall='gall_push(){git commit -a -m "$1" && git push};gall_push'
#alias gst2='git status -uno'
#alias greset='git reset --hard HEAD^'
#########################################

############## performance #############
alias p_ios='iostat -xdm'
#alias p_ios='iostat -xdm 1'
alias p_pio='pidstat -d 1'
alias p_cpu='mpstat -P ALL 3'
alias p_vm='vmstat 3'
alias p_cs='pidstat -w 2'
#alias p_cs='pidstat -wt 2'
########################################
#alias klog="ls -1tr c4_safe_ktrace.log.*.gz|awk '{print $9}'|xargs zcat|less -i -M -R -j20"
################### tricky_command  ################
#alias f_g_s="find . -name rule.mk -exec grep 'Wall' {} \; -exec sed -i 's/-Wall //g' {} \;"
#alias f_g_s_2="find . -name rule.mk|xargs grep 'TI_CXXFLAGS='|grep -v 'Wall'|awk -F ':' '{print $1}'|xargs sed -i 's/Werror/Werror -Wall/g'"
#alias f_g_s_3='find . -type f|xargs file|grep "ELf"|cut -d":" -f1|xargs nm -A -D -a -l -C|grep "platformInit"'
#alias f_g_s_4='find . -type f|xargs file|grep "ELf"|cut -d":" -f1|xargs objdump -x|grep "platformInit"'
#									    readelf -ahW
 
#  pstree -p  		search parent process
#  kill -TERM [ppid]	kill parent process and all child processes   or
#alias k_a_p="ps -ef|grep 'build'|awk -F ' ' '{print $2}'|xargs sudo kill -9 {}"

# quick delete large directory
# mkdir -p /tmp/unity
# rsync --delete-before -a -H -v --progress --stats /tmp/unity/ /c4_working/unity.test/
# quick delete large file
# touch /tmp/test
# rsync --delete-before -d --progress --stats /tmp/test /root/data
# rsync -a --delete-before --progress --stats /tmp/test /root/data
####################################################

# config thefuck
#eval $(thefuck --alias)


function edf() {
	if [ "X${2}" = "X" ]; then
		echo "USAGE: ediff <FILE 1> <FILE 2>"
	else
		# The --eval flag takes lisp code and evaluates it with EMACS
		#emacs -nw --eval "(ediff-files \"$1\" \"$2\")"
		emacsclient -t --eval "(ediff-files \"$1\" \"$2\")"		
	fi
}

function gdb2() { emacsclient -t --eval "(gdb \"gdb -i=mi -q --args $*\")";}


## herbstluftwm
alias herb-config="moar ~/dotfiles/herbstluftwm/autostart"
alias herb-keys="herbstclient list_keybinds"

######################### new append at tail ################################
#alias os="lsb_release -a"

# if emacs was installed
#if [ -x "$(command -v emacs)" ]; then
#        emacs --daemon >/dev/null 2>&1
#fi

alias croc_s="croc --yes send --code 'hello'" # use (croc --yes hello) to recieve
alias croc_r="croc --yes hello"

#alias rg='rg -i -e'
alias rg='rg_with_colors(){rg -i -e "$1" --color always -C 2};rg_with_colors'
alias screenoff='sudo xset dpms force off'

pc4() {
      proxychains4 "$@"
}

alias procs='procs --sortd cpu -W 1'
alias gdb='gdb -q'
alias dmesg='sudo dmesg --color=always'
#export PAGER='moar'
